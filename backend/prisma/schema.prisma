generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Reaction {
  id     Int    @id @default(autoincrement())
  userId String
  pinId  Int
  pin    Pin    @relation(fields: [pinId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@unique([userId, pinId])
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  //board     Board?     @relation("UserBoard")
  comments  Comment[]
  pins      Pin[]      @relation("CreatedPins")
  reactions Reaction[]
  savedPins SavedPin[]
}

model Category {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  imageUrl    String?
  description String?
  createdAt   DateTime @default(now())
  
  pins     Pin[]
}

model Pin {
  id                 Int        @id @default(autoincrement())
  title              String
  authorId           String
  createdAt          DateTime   @default(now())
  description        String?
  imageUrl           String
  //boardId            Int?
  altText            String?
  isAllowedtoComment Boolean    @default(true)
  link               String?
  showSimilarProduct Boolean    @default(false)
  categoryId         Int?
  category           Category?  @relation(fields: [categoryId], references: [id])
  comments           Comment[]
  author             User       @relation("CreatedPins", fields: [authorId], references: [id])
  // board              Board?     @relation(fields: [boardId], references: [id])
  reactions          Reaction[]
  savedPin           SavedPin[]
  tags               Tag[]      @relation("PinTags")//----1b
  //tag                String[] //---1a
}

model Tag {               //----1c
  id   Int    @id @default(autoincrement())
  name String @unique
  pins Pin[]  @relation("PinTags")
}
/*
model Board {
  id     Int    @id @default(autoincrement())
  name   String
  userId String @unique
  user   User   @relation("UserBoard", fields: [userId], references: [id])
  // pins   Pin[]
}
*/
model Comment {
  id        Int      @id @default(autoincrement())
  userId    String
  createdAt DateTime @default(now())
  pinId     Int
  content   String
  pin       Pin      @relation(fields: [pinId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  }

model SavedPin {
  id      Int      @id @default(autoincrement())
  userId  String
  pinId   Int
  savedAt DateTime @default(now())
  pin     Pin      @relation(fields: [pinId], references: [id])
  user    User     @relation(fields: [userId], references: [id])

  @@unique([userId, pinId])
}
