generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Reaction {
  id     Int    @id @default(autoincrement())
  userId String
  pinId  Int
  pin    Pin    @relation(fields: [pinId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@unique([userId, pinId])
}

model User {
  id        String     @id @default(uuid())
  name      String?
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  comments  Comment[]
  pins      Pin[]      @relation("CreatedPins")
  Reaction  Reaction[]
  SavedPin  SavedPin[]
}

model Pin {
  /// id          Int      @id @default(autoincrement())
  /// title       String
  /// imageUrl    String
  /// description String?
  /// createdAt   DateTime @default(now())
  /// author   User   @relation(fields: [authorId], references: [id])
  /// authorId String
  /// reactions Reaction[]
  /// comments  Comment[]
  /// tags      String[]
  id          Int        @id @default(autoincrement())
  title       String
  authorId    String
  createdAt   DateTime   @default(now())
  description String?
  imageUrl    String
  tags        String[]
  comments    Comment[]
  author      User       @relation("CreatedPins", fields: [authorId], references: [id])
  reactions   Reaction[]
  SavedPin    SavedPin[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    String
  createdAt DateTime @default(now())
  pinId     Int
  content   String
  pin       Pin      @relation(fields: [pinId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, pinId])
}

model SavedPin {
  id      Int      @id @default(autoincrement())
  userId  String
  pinId   Int
  savedAt DateTime @default(now())
  Pin     Pin      @relation(fields: [pinId], references: [id])
  User    User     @relation(fields: [userId], references: [id])

  @@unique([userId, pinId])
}
