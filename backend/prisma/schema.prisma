// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Reaction {
  id     Int    @id @default(autoincrement())
  userId String
  pinId  Int
  pin    Pin    @relation(fields: [pinId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@unique([userId, pinId])
}

model User {
  id        String     @id @default(uuid())
  name      String?
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  // board     Board?     @relation("UserBoard")
  comments  Comment[]
  pins      Pin[]      @relation("CreatedPins")
  savedPins SavedPin[]
  reactions Reaction[]
}

model Pin {
  id          Int      @id @default(autoincrement())
  title       String
  imageUrl    String
  description String?
  createdAt   DateTime @default(now())

  author   User   @relation("CreatedPins", fields: [authorId], references: [id])
  authorId String

  reactions Reaction[]
  comments  Comment[]
  tags      String[]
  savedBy   SavedPin[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    String
  createdAt DateTime @default(now())
  pinId     Int
  content   String
  pin       Pin      @relation(fields: [pinId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, pinId])
}

model SavedPin {
  id      Int      @id @default(autoincrement())
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  pin     Pin      @relation(fields: [pinId], references: [id])
  pinId   Int
  savedAt DateTime @default(now())

  @@unique([userId, pinId])
}
